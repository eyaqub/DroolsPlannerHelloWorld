import com.hill.planner.basic.Plane;
import org.drools.planner.core.score.constraint.ConstraintType;
import org.drools.planner.core.score.constraint.IntConstraintOccurrence;
import org.drools.planner.core.score.buildin.hardandsoft.HardAndSoftScoreHolder;

global HardAndSoftScoreHolder scoreHolder;

rule "singlePlaneTaxiRule"
	when
		$plane : Plane($taxiInterval1 : taxiInterval, $id : id);
		$plane2 : Plane($taxiInterval2 : taxiInterval, id != $id);
	then
		int overlap = 0;
		if($taxiInterval1.overlap($taxiInterval2)!=null)
		{
			overlap = ((int)$taxiInterval1.overlap($taxiInterval2).toDurationMillis());
		}
		insertLogical(new IntConstraintOccurrence("singlePlaneTaxiRule", ConstraintType.NEGATIVE_HARD,
              			overlap,$plane,$plane2));	

end


// Accumulate hard constraints
rule "hardConstraintsBroken"
        salience -1 // Do the other rules first (optional, for performance)
    when
        $hardTotal : Number() from accumulate(
            IntConstraintOccurrence(constraintType == ConstraintType.NEGATIVE_HARD, $weight : weight),
            sum($weight)
        )
    then
        scoreHolder.setHardConstraintsBroken($hardTotal.intValue());
               			
        //System.out.println("D Score \t"+$hardTotal.intValue());
end